##Страница на которой закончил читать
page = "Страница на которой закончил читать"
number_page = 41

# Разбивка текста на несколько строк с использованием "'''"

print()
fred = '''Что едят на полдник динозавры?
ТиРекс-кекс!
Но не обязательно
потому что иногда они едят
тараньку с пивком'''
print(fred)
print()
print()

##Можно печатать строки, содержащие значения переменных. Для этого ис-
##пользуются метки %s в тех местах, где должны быть значения (это называ-
##ется подстановкой, или встраиванием значений в строку). Например, в пе-
##ременной myscore хранится счет игры, и вы хотите, чтобы он отображался
##в сообщении «Мой счет:
##очков». Тогда вместо числа используйте
##в сообщении метку %s, а при печати укажите нужное значение. Вот так:
myscore = 1000
message = 'Мой счет: %s очков'
print(message % myscore)
print()
print()
##Печатая строку с меткой %s, можно каждый раз подставлять
##в нее значения разных переменных, как в этом примере:
joke_text = '%s: приспособление для поиска мебели в темноте'
bodypart1 = 'Коленка'
bodypart2 = 'Лодыжка'
print(joke_text % bodypart1)
print(joke_text % bodypart2)
print(joke_text % "мизинец")
##Можно использовать и несколько меток в одной строке. Вот так:
nums = 'Что сказало число %s числу %s? Славный поясок!'
print(nums % (0, 8))
print()
print()

#Что получится, если умножить 10 на 5? Разумеется, 50. А если умножить
#на 10 букву «a»? Вот что думает об этом Python:
print(10 * 'a')
#Эта особенность может пригодиться для вывода строк с отступом
#в заданное число пробелов.
spaces = ' ' * 25
print('%s Задний переулок 12' % spaces)
print('%s Трясогузочья пустошь' % spaces)
print('%s Западный Всхрапшир' % spaces)
print()
print()
print('Уважаемый Сэр,')
print()
print('Хочу сообщить вам, что кое-где на крыше уборной')
print('недостает кусков черепицы.')
print('Думаю, прошлой ночью их сдуло внезапным порывом ветра.')
print()
print('С почтением')
print('Малькольм Конфузли')

###Помимо выравнивания блоков текста, умножение пригодится
###для заполнения экрана надоедливыми сообщениями. Запустите этот
###пример самостоятельно:
print(1000 * 'слякоть ')
print()
print()
##Списки лучше чем присваивать переменной строку Например, мы можем напечатать третий элемент из списка (отсчет с 0)
wizard_list = ['паучьи лапки', 'жабий палец', 'глаз тритона', 'крыло летучей мыши', 'жир слизня', 'перхоть змеи']
print(wizard_list[2])
print()
print()
#Также можно заменить элемент списка — это гораздо проще, чем за-
#менить часть строки. Положим, нам требуется не глаз тритона, а язык
#улитки. Не проблема, давайте подправим список:
wizard_list[2] = 'язык улитки'
print(wizard_list)
print(wizard_list[2])
print()
print()
##В списках могут даже храниться другие списки:
numbers = [1, 2, 3, 4, 5]
strings = ['хватит', 'циферки', 'считать']
mylist = [numbers, strings]
print(mylist)
print()
print()



print(page, number_page)
